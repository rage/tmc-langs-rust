searchState.loadedDescShard("tmc_langs_cli", 0, "CLI client for TMC.\nCreate clap app\nContains various error types.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains the type definition for the output format of the …\nChecks for updates to any exercises that exist locally.\nChecks the code style for the given exercise\nCleans the target exercise using the appropriate language …\nCompresses the target exercise. Only includes student …\nFetches the user’s enrolled courses.\nDownloads an exercise’s model solution\nDownloads an old submission. Resets the exercise at …\nDownloads exercises. If downloading an exercise that has …\nExtracts an exercise from an archive. If the output-path …\nParses @Points notations from an exercise’s exercise …\nFinds all exercise root directories inside the …\nRetrieves a value from the settings\nFetches course data. Combines course details, course …\nFetches course details\nLists a course’s exercises\nFetches course settings\nLists courses\nFetches exercise details\nReturns a configuration which separately lists the student …\nFetches the current user’s old submissions for an …\nChecks for updates to exercises\nFetches an organization\nFetches a list of all organizations from the TMC server\nFetches unread reviews for a course\nPrints every key=value pair in the settings file\nReturns a list of local exercises for the given course\nChecks if the CLI is authenticated. Prints the access …\nAuthenticates with the TMC server and stores the OAuth2 …\nLogs out and removes the OAuth2 token from config\nMarks a review as read\nMigrates an exercise on disk into the langs project …\nChange the projects-dir setting, moving the contents into …\nSends an exercise to the TMC pastebin\nProcesses the exercise files in exercise-path, removing …\nProcesses the exercise files in exercise-path, removing …\nTakes a submission archive and turns it into an archive …\nRefresh the given course\nRequests code review\nResets the settings file to the defaults\nResets an exercise. Removes the contents of the exercise …\nRun the tests for the exercise using the appropriate …\nProduces a description of an exercise using the …\nSends feedback for an exercise submission\nSaves a value in the settings\nConfigure the CLI\nSubmits an exercise. By default blocks until the …\nVarious commands that communicate with the TestMyCode …\nUnsets a value from the settings\nUpdates all local exercises that have been updated on the …\nWaits for a submission to finish\nName used to differentiate between different frontends …\nName used to differentiate between different frontends …\nThe client name of which the settings should be listed.\nClient version.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPretty-prints all output\nPath to the archive.\nPath to the cached course.\nThe cache root.\nRuns checkstyle if given. Path to the file where the style …\nThe client name of which the exercises should be listed.\nPath to exercise’s clone path, where the unmodified test …\nCompression algorithm to use.\nCompression algorithm used for the archive.\nThe name of the course.\nThe course slug the local exercises of which should be …\nIf set, does not include metadata such as timestamps in …\nPath to the directory where the project resides.\nPath to the directory where the exercise resides.\nPath to the directory where the exercise resides.\nPath to the directory where the projects reside.\nPath to the directory where the exercise resides.\nPath to the directory where the exercise resides.\nPath to the directory where the exercise resides.\nPath to the directory where the exercise resides.\nPath to the directory where the project resides.\nIf set, the submission is extracted without trying to find …\nVersion control branch.\nLocale as a three letter ISO 639-3 code, e.g. ‘eng’ or …\nLanguage as a three letter ISO 639-3 code, e.g. ‘eng’ …\nIf set, simply compresses the target directory with all of …\nIf set, simply extracts the target directory with all of …\nIf given, the exercise will reside in the root of the …\nThe output format of the submission archive. Defaults to …\nIf defined, the check results will be written to this …\nPath to the output archive. Overwritten if it already …\nPath to the directory where the archive will be extracted.\nIf given, the search results will be written to this path. …\nIf given, the configuration will be written to this path. …\nPath to the directory where the processed files will be …\nPath to the directory where the processed files will be …\nPath to the resulting archive. Overwritten if it already …\nIf defined, the test results will be written to this path. …\nIf given, the scan results will be written to this path. …\nPath to the directory where to search for exercises.\nVersion control URL or path.\nIf given, the tests will be copied from this stub instead, …\nCompression algorithm used for the stub archive.\nCompression algorithm used for the submission.\nPath to the submission archive.\nA key-value pair in the form key=value to be written into …\nIf defined, the command will wait for a string to be …\nThe course slug, e.g. mooc-java-programming-i.\nThe directory where the projects should be moved.\nThe checksum of the exercise from the TMC server.\nThe exercise id, e.g. 1234.\nPath to the directory where the project resides.\nThe exercise slug, e.g. part01-Part01_01.Sandbox.\nThe value in JSON.\nThe key. Parsed as JSON, assumed to be a string if parsing …\nThe name of the setting.\nThe name of the setting.\nIf set, the password is expected to be a base64 encoded …\nThe ID of the course.\nThe ID of the course.\nThe ID of the course.\nThe ID of the course.\nThe ID of the course.\nThe ID of the course.\nThe ID of the course.\nSet to avoid blocking.\nIf set, will always download the course template instead …\nThe email address of your TMC account. The password will …\nAn exercise. Takes two values, an exercise id and a …\nThe ID of the exercise.\nThe ID of the exercise.\nExercise id of an exercise that should be downloaded. …\nThe ID of the exercise.\nThe ID of the exercise.\nThe ID of the exercise.\nThe ID of the exercise.\nThe ID of the exercise.\nThe ID of the exercise.\nPath to the directory where the project resides.\nA feedback answer. Takes two values, a feedback answer id …\nThe feedback answer URL.\nLanguage as a three letter ISO 639-3 code, e.g. ‘eng’ …\nLanguage as a three letter ISO 639-3 code, e.g. ‘eng’ …\nLanguage as a three letter ISO 639-3 code, e.g. ‘eng’ …\nMessage for the review.\nOrganization slug (e.g. mooc, hy).\nOrganization slug (e.g. mooc, hy).\nPath to where the submission should be downloaded.\nOptional message to attach to the paste.\nThe ID of the review.\nIf set, the exercise is submitted to the server before …\nIf set, the exercise is submitted to the server before …\nThe OAUTH2 access token that should be used for …\nIf set, the password will be read from stdin instead of …\nThe ID of the submission.\nThe ID of the submission.\nThe ID of the submission.\nPath to the exercise to be submitted.\nPath to the directory where the submission resides.\nPath to the directory where the exercise resides.\nPath to where the model solution will be downloaded.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nmegabytes\nThe format for all messages written to stdout by the CLI\nFailed to connect to the TMC server, likely due to no …\nAn unexpected issue occurred during the command\nFailed to download some or all exercises\nThe command was ran without fatal errors\n403 from server\nFor all other errors\nInvalid token\nNot logged in, detected either by no token or 401 from …\nAdditional warnings, such as for an outdated Python …\nClient out of date\nData that is output at the end of a command.\nAn exercise in the projects directory.\nStatus update output as a command progresses.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")