searchState.loadedDescShard("nix", 0, "Rust friendly bindings to the various *nix system …\nContains the error value\nNix Error Type\nThe operation involved a conversion to Rust’s native …\nContains the success value\nNix Result Type\nThe operation is not supported by Nix, in this instance …\nConvert this <code>Error</code> to an <code>Errno</code>.\nCreate a buffer large enough for storing some control …\nFeature tests for OS functionality\nReturns the argument unchanged.\nCreate a nix Error from a given errno\nQuery network interface addresses\nCalls <code>U::from(self)</code>.\nCreate a new invalid argument error (<code>EINVAL</code>)\nGenerates a wrapper function for an ioctl that passes no …\nGenerates a wrapper function for a “bad” ioctl that …\nGenerates a wrapper function for an ioctl that reads data …\nGenerates a wrapper function for a “bad” ioctl that …\nGenerates a wrapper function for an ioctl that reads an …\nGenerates a wrapper function for an ioctl that reads and …\nGenerates a wrapper function for a “bad” ioctl that …\nGenerates a wrapper function for an ioctl that reads and …\nGenerates a wrapper function for an ioctl that writes an …\nGenerates a wrapper function for a ioctl that writes an …\nGenerates a wrapper function for a “bad” ioctl that …\nGenerates a wrapper function for an ioctl that writes data …\nGenerates a wrapper function for a “bad” ioctl that …\nLoad and unload kernel modules.\nGet the current errno and convert it to a nix Error\nPosix Message Queue functions\nFunctionality involving network interfaces\nWait for events to trigger on specific file descriptors\nCreate master and slave virtual pseudo-terminals (PTYs)\nGenerate an ioctl request code for a command that passes …\nGenerate an ioctl request code for a command that reads.\nGenerate an ioctl request code for a command that reads …\nGenerate an ioctl request code for a command that writes.\nSafe wrappers around functions found in libc “unistd.h”…\nAn open directory.\nA directory entry, similar to <code>std::fs::DirEntry</code>.\nThe return type of Dir::into_iter\nReturns the bare file name of this directory entry without …\nReturns the type of this directory entry, if known.\nConverts from a descriptor-based object, closing the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts from a file descriptor, closing it on success or …\nReturns the inode number (<code>d_ino</code>) of the underlying <code>dirent</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a owning iterator, that is, one that takes …\nReturns an iterator of <code>Result&lt;Entry&gt;</code> which rewinds when …\nOpens the given path as with <code>fcntl::open</code>.\nOpens the given path as with <code>fcntl::openat</code>.\nClear the environment of all name-value pairs.\nThe sentinel value indicates that a function failed and …\nReturns the platform-specific value of errno\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns <code>Ok(value)</code> if it does not contain the sentinel …\nRemoves byte range from a file without leaving a hole.\nIncreases file space by inserting a hole within the file …\nFile size is not changed.\nDeallocates space by creating a hole.\nShared file data extants are made private to the file.\nZeroes space in specified byte range.\nThe file descriptor will automatically be closed during a …\nThe size of the file cannot be increased.\nPrevents further calls to <code>fcntl()</code> with <code>F_ADD_SEALS</code>.\nThe file cannot be reduced in size.\nThe file contents cannot be modified.\nMode argument flags for fallocate determining operation …\nAdditional configuration flags for <code>fcntl</code>’s <code>F_SETFD</code>.\nConfiguration options for opened files.\nMask for the access mode of the file.\nOpen the file in append-only mode.\nGenerate a signal when input or output becomes possible.\nCloses the file descriptor once an <code>execve</code> call is made.\nCreate the file if it does not exist.\nTry to minimize cache effects of the I/O for this file.\nIf the specified path isn’t a directory, fail.\nImplicitly follow each <code>write()</code> with an <code>fdatasync()</code>.\nError out if a file was not created.\nSame as <code>O_SYNC</code>.\nAllow files whose sizes can’t be represented in an <code>off_t</code> …\nSame as <code>O_NONBLOCK</code>.\nDo not update the file last access time during <code>read(2)</code>s.\nDon’t attach the device as the process’ controlling …\n<code>open()</code> will fail if the given path is a symbolic link.\nWhen possible, open the file in nonblocking mode.\nObtain a file descriptor for low-level access.\nOnly allow reading.\nAllow both reading and writing.\nSimilar to <code>O_DSYNC</code> but applies to <code>read</code>s instead.\nImplicitly follow each <code>write()</code> with an <code>fsync()</code>.\nCreate an unnamed temporary file.\nTruncate an existing regular file to 0 length if it allows …\nOnly allow writing.\nGift the user pages to the kernel.\nHint that more data will be coming in a subsequent splice.\nRequest that pages be moved instead of copied.\nDo not block on I/O.\nAdditional flags for file sealing, which allows for …\nAdditional flags to <code>splice</code> and friends.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nCopy a range of data from one file to another\nReturns an empty set of flags\nReturns an empty set of flags\nReturns an empty set of flags\nReturns an empty set of flags\nReturns an empty set of flags\nReturns an empty set of flags\nManipulates file space.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nCheck if the OS supports atomic close-on-exec for sockets\nDescribes a single address for an interface as returned by …\nHolds the results of <code>getifaddrs</code>.\nNetwork address of this interface\nBroadcast address of this interface, if applicable\nPoint-to-point destination address\nFlags as from <code>SIOCGIFFLAGS</code> ioctl\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet interface addresses using libc’s <code>getifaddrs</code>\nName of the network interface\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNetmask of this interface\nFlags used by <code>delete_module</code>.\nIgnore symbol version hashes.\nIgnore kernel version magic.\nFlags used by the <code>finit_module</code> function.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nUnloads the kernel module with the given name.\nReturns an empty set of flags\nReturns an empty set of flags\nLoads a kernel module from a given file descriptor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nLoads a kernel module from a buffer.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nLinux 2.4.0 - Bind directory at different place\nDirectory modifications are synchronous\nAllow mandatory locks on a FS\nDo not update access times\nDisallow access to device special files\nDo not update directory access times\nDisallow program execution\nIgnore suid and sgid bits\nMount read-only\nAlter flags of a mounted FS\nWrites are synced at once\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns an empty set of flags\nReturns an empty set of flags\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns an empty set of flags\nReturns an empty set of flags\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nClose a message queue\nGet message queue attributes\nOpen a message queue\nReceive a message from a message queue\nConvenience function. Removes <code>O_NONBLOCK</code> attribute for a …\nSend a message to a message queue\nConvenience function. Sets the <code>O_NONBLOCK</code> attribute for a …\nSet the attributes of the message queue. Only <code>O_NONBLOCK</code> …\nRemove a message queue\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nNetwork interface name resolution.\nReceive all multicast packets. (see <code>netdevice(7)</code>)\nAuto media selection active. (see <code>netdevice(7)</code>)\nValid broadcast address set. (see <code>netdevice(7)</code>)\nInternal debugging flag. (see <code>netdevice(7)</code>)\nDriver signals dormant. Volatile.\nThe addresses are lost when the interface goes down. (see …\nEcho sent packets. Volatile.\nInterface is a loopback interface. (see <code>netdevice(7)</code>)\nDriver signals L1 up. Volatile.\nMaster of a load balancing bundle. (see <code>netdevice(7)</code>)\nSupports multicast. (see <code>netdevice(7)</code>)\nNo arp protocol, L2 destination address not set. (see …\nAvoid use of trailers. (see <code>netdevice(7)</code>)\nDo not provide packet information\nInterface is a point-to-point link. (see <code>netdevice(7)</code>)\nIs able to select media type via ifmap. (see <code>netdevice(7)</code>)\nInterface is in promiscuous mode. (see <code>netdevice(7)</code>)\nResources allocated. (see <code>netdevice(7)</code>)\nSlave of a load balancing bundle. (see <code>netdevice(7)</code>)\nTAP device\nTUN device (no Ethernet headers)\nInterface is running. (see <code>netdevice(7)</code>)\nStandard interface flags, used by <code>getifaddrs</code>\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns an empty set of flags\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nResolve an interface into a interface number.\nInserts the specified flags in-place.\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nToggles the specified flags in-place.\nError condition (only returned in <code>PollFd::revents</code>; ignored …\nHang up (only returned in <code>PollFd::revents</code>; ignored in …\nThere is data to read.\nInvalid request: <code>fd</code> not open (only returned in …\nWriting is now possible, though a write larger that the …\nThere is some exceptional condition on the file descriptor.\nPriority band data can be read (generally unused on Linux).\nEquivalent to <code>POLLIN</code>\nPriority data may be written.\nEquivalent to <code>POLLOUT</code>\nThis is a wrapper around <code>libc::pollfd</code>.\nThese flags define the different events that can be …\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns an empty set of flags\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nCreates a new <code>PollFd</code> specifying the events of interest for …\nReturns the complement of this set of flags.\n<code>poll</code> waits for one of a set of file descriptors to become …\n<code>ppoll()</code> allows an application to safely wait until either …\nRemoves the specified flags in-place.\nReturns the events that occured in the last call to <code>poll</code> …\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nToggles the specified flags in-place.\nRepresentation of a master with a forked pty\nRepresentation of a master/slave pty pair\nRepresentation of the Master device in a master/slave pty …\nMetadata about forked process\nCreate a new pseudoterminal, returning the master file …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGrant access to a slave pseudoterminal (see <code>grantpt(3)</code>)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe master port in a virtual pty pair\nThe master port in a virtual pty pair\nCreate a new pseudoterminal, returning the slave and …\nOpen a pseudoterminal device (see <code>posix_openpt(3)</code>)\nGet the name of the slave pseudoterminal (see <code>ptsname(3)</code>)\nGet the name of the slave pseudoterminal (see <code>ptsname(3)</code>)\nThe slave port in a virtual pty pair\nUnlock a pseudoterminal master/slave pseudoterminal pair …\nCpuSet represent a bit-mask of CPUs. CpuSets are used by …\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturn the maximum number of CPU in CpuSet\nReturns an empty set of flags\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nTest to see if a CPU is in the CpuSet. <code>field</code> is the CPU id …\nCreate a new and empty CpuSet.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\n<code>sched_getaffinity</code> get a thread’s CPU affinity mask (…\n<code>sched_setaffinity</code> set a thread’s CPU affinity mask (…\nExplicitly yield the processor to other threads.\nInserts or removes the specified flags depending on the …\nAdd a CPU to CpuSet. <code>field</code> is the CPU id to add\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nToggles the specified flags in-place.\nRemove a CPU from CpuSet. <code>field</code> is the CPU id to remove\nPOSIX Asynchronous I/O\nMonitoring API for filesystem events.\nProvide helpers for making ioctl system calls.\nSet and configure disk quotas for users, groups, or …\nReboot/shutdown or enable/disable Ctrl-Alt-Delete.\nInterface for the <code>signalfd</code> syscall.\nSocket interface functions\nGet filesystem statistics\nAn interface for controlling asynchronous communication …\nTimer API via file descriptors.\nAll of the requests have already finished\nReturn values for <code>AioCb::cancel</code> and <code>aio_cancel_all</code>\nAll outstanding requests were canceled\nAIO Control Block.\nMode for <code>AioCb::fsync</code>.  Controls whether only data or both …\nSome requests were not canceled.  Their status should be …\nGeneric thing that keeps a mutable buffer from dropping\nGeneric thing that keeps a buffer from dropping\nOwns (uniquely or shared) a memory buffer to keep it from …\nRequests that <code>lio_listio</code> return immediately\nRequests that <code>lio_listio</code> block until all requested …\nLIO Control Block.\nMode for <code>lio_listio</code>\nWhen used with <code>lio_listio</code>, determines whether a given <code>aiocb</code>…\nNo buffer to own.\non supported operating systems only, do it like <code>fdatasync</code>\ndo it like <code>fsync</code>\nKeeps a reference to a slice\nCancels outstanding AIO requests for a given file …\nRetrieve return status of an asynchronous operation.\nCollect final status for an individual <code>AioCb</code> submitted as …\nSuspends the calling process until at least one of the …\nA collection of <code>AioCb</code>s.  All of these will be issued …\nRemove the inner boxed mutable slice, if any, and return …\nRemove the inner boxed slice, if any, and return it.\nRemove the inner <code>Buffer</code> and return it\nCancels an outstanding AIO request.\nIf the <code>AioCb</code> has no remaining state in the kernel, just …\nRetrieve error status of an asynchronous operation.\nRetrieve error status of an individual <code>AioCb</code> submitted as …\nReturns the underlying file descriptor associated with the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe safest and most flexible way to create an <code>AioCb</code> for …\nThe safest and most flexible way to create an <code>AioCb</code>.\nConstructs a new <code>AioCb</code> with no associated buffer.\nConstructs a new <code>AioCb</code> from a mutable raw pointer\nConstructs a new <code>AioCb</code> from a mutable slice.\nConstructs a new <code>AioCb</code> from a raw pointer.\nLike <code>from_mut_slice</code>, but works on constant slices rather …\nAn asynchronous version of <code>fsync(2)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>aiocb</code>’s <code>LioOpcode</code> field\nSubmits multiple asynchronous I/O requests with a single …\nResubmits any incomplete operations with <code>lio_listio</code>.\nReturns the requested length of the aio operation in bytes\nReturns the file offset stored in the <code>AioCb</code>\nReturns the priority of the <code>AioCb</code>\nAsynchronously reads from a file descriptor into a buffer\nUpdate the notification settings for an existing <code>aiocb</code>\nReturns the <code>SigEvent</code> stored in the <code>AioCb</code>\nInitialize an empty <code>LioCb</code>\nAsynchronously writes from a buffer to a file descriptor\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns an empty set of flags\nReturns an empty set of flags\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns an empty set of flags\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nToggles the specified flags in-place.\nConfiguration options for <code>inotify_add_watch</code>.\nConfiguration options for <code>inotify_init1</code>.\nAn inotify instance. This is also a file descriptor, you …\nA single inotify event.\nThis object is returned when you create a new watch on an …\nAdds a new watch on the target file or directory.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nThis cookie is a number that allows you to connect related …\nReturns an empty set of flags\nReturns an empty set of flags\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nInitialize a new inotify instance.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nEvent mask. This field is a bitfield describing the exact …\nFilename. This field exists only if the event was …\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReads a collection of events from the inotify file …\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves an existing watch using the watch descriptor …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nWatch descriptor. This field corresponds to the watch …\nGenerate an ioctl request code for a command that passes …\nGenerate an ioctl request code for a command that reads.\nGenerate an ioctl request code for a command that reads …\nGenerate an ioctl request code for a command that writes.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns an empty set of flags\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nToggles the specified flags in-place.\nUndo the effect of an earlier <code>MADV_DONTDUMP</code>.\nUndo the effect of <code>MADV_DONTFORK</code>.\nExclude the given range from a core dump.\nDo not make pages in this range available to the child …\nDo not expect access in the near future.\nSpecify that the application no longer needs the pages in …\nEnable Transparent Huge Pages (THP) for pages in the given …\nPoison the given pages.\nEnable Kernel Samepage Merging (KSM) for the given pages.\nUndo the effect of <code>MADV_HUGEPAGE</code>.\nNo further special treatment. This is the default.\nExpect random page references.\nFree up a given range of pages and its associated backing …\nExpect sequential page references.\nPreserve the memory of each page but offline the original …\nUndo the effect of <code>MADV_MERGEABLE</code>\nExpect access in the near future.\nPut the mapping into the first 2GB of the process address …\nSynonym for <code>MAP_ANONYMOUS</code>.\nThe mapping is not backed by any file.\nCompatibility flag. Ignored.\nCompatibility flag. Ignored.\nCompatibility flag. Ignored.\nPlace the mapping at exactly the address specified in <code>addr</code>.\nUsed for stacks; indicates to the kernel that the mapping …\nAllocate the mapping using “huge pages.”\nMake use of 16GB huge page (must be supported by the …\nMake use of 16MB huge page (must be supported by the …\nMake use of 1GB huge page (must be supported by the system)\nMake use of 1MB huge page (must be supported by the system)\nMake use of 256MB huge page (must be supported by the …\nMake use of 2GB huge page (must be supported by the system)\nMake use of 2MB huge page (must be supported by the system)\nMake use of 32MB huge page (must be supported by the …\nMake use of 512KB huge page (must be supported by the …\nMake use of 512MB huge page (must be supported by the …\nMake use of 64KB huge page (must be supported by the …\nMake use of 8MB huge page (must be supported by the system)\nMark the mmaped region to be locked in the same way as …\nOnly meaningful when used with <code>MAP_POPULATE</code>. Don’t …\nDo not reserve swap space for this mapping.\nPopulate page tables for a mapping.\nCreate a private copy-on-write mapping. Mutually exclusive …\nShare this mapping. Mutually exclusive with <code>MAP_PRIVATE</code>.\nRegion grows down, like a stack.\nLock pages that are currently mapped into the address …\nLock pages which will become mapped into the address space …\nPlace the mapping at exactly the address specified in …\nPermit the kernel to relocate the mapping to a new virtual …\nOptions for <code>mremap()</code>.\nSchedule an update but return immediately.\nInvalidate all cached data.\nPerform an update and wait for it to complete.\nAdditional parameters for <code>mmap()</code>.\nFlags for <code>mlockall</code>.\nUsage information for a range of memory to allow for …\nConfiguration flags for <code>msync</code>.\nPages can be executed\nApply protection up to the end of a mapping that grows …\nApply protection down to the beginning of a mapping that …\nPages cannot be accessed.\nPages can be read.\nPages can be written.\nDesired memory protection of a memory mapping.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns an empty set of flags\nReturns an empty set of flags\nReturns an empty set of flags\nReturns an empty set of flags\nReturns an empty set of flags\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\ngive advice about use of memory\nLocks all memory pages that contain part of the address …\nLocks all memory pages mapped into this process’ address …\nallocate memory, or map files or devices into memory\nSet protection of memory mapping.\nExpands (or shrinks) an existing memory mapping, …\nsynchronize a mapped region\nUnlocks all memory pages that contain part of the address …\nUnlocks all memory pages mapped into this process’ …\nremove a mapping\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nFlags used and returned by <code>get()</code> and <code>set()</code>.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns an empty set of flags\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nRetrieve the current process personality.\nInserts the specified flags in-place.\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nSet the current process personality.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nToggles the specified flags in-place.\nObtain ID of the calling thread (see <code>pthread_self(3)</code>\nUsing the ptrace options the tracer can configure the …\nPtrace options used in conjunction with the …\nEvent that stops before a return from clone.\nEvent that stops before a return from execve.\nEvent for a stop before an exit. Unlike the waitpid Exit …\nEvent that stops before a return from fork or clone.\nSTop triggered by a seccomp rule on a tracee.\nEvent that stops before a return from vfork or clone.\nEvent for a return from vfork.\nSend a SIGKILL to the tracee if the tracer exits.  This is …\nStop tracee at next clone call and trace the cloned …\nStop tracee at next execve call.\nStop tracee at next exit call. Stops before exit commences …\nStop tracee at next fork and start tracing the forked …\nStop tracee when a SECCOMP_RET_TRACE rule is triggered. …\nWhen delivering system call traps set a bit to allow …\nStop tracee at next vfork call and trace the vforked …\nStop tracee at vfork completion.\nPtrace Request enum defining the action to be taken.\nReturns the set containing all flags.\nAttach to a running process, as with …\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nRestart the stopped tracee process, as with …\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nDetaches the current running process, as with …\nReturns an empty set of flags\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nGets a ptrace event as described by …\nGet user registers, as with <code>ptrace(PTRACE_GETREGS, ...)</code>\nGet siginfo as with <code>ptrace(PTRACE_GETSIGINFO,...)</code>\nInserts the specified flags in-place.\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nIssues a kill request as with <code>ptrace(PTRACE_KILL, ...)</code>\nReturns the complement of this set of flags.\nReads a word from a processes memory at the given address\nRemoves the specified flags in-place.\nAttach to a running process, as with …\nInserts or removes the specified flags depending on the …\nSet options, as with <code>ptrace(PTRACE_SETOPTIONS,...)</code>.\nSet user registers, as with <code>ptrace(PTRACE_SETREGS, ...)</code>\nSet siginfo as with <code>ptrace(PTRACE_SETSIGINFO,...)</code>\nMove the stopped tracee process forward by a single step …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nContinue execution until the next syscall, as with …\nContinue execution until the next syscall, as with …\nMove the stopped tracee process forward by a single step …\nToggles the specified flags in-place.\nSets the process as traceable, as with …\nWrites a word into the processes memory at the given …\nWrapper type for <code>if_dqblk</code>\nSpecify a group quota\nUse the original quota format.\nUse the standard VFS v0 quota format.\nUse the VFS v1 quota format.\nAll fields.\nThe block hard &amp; soft limit fields.\nThe disk use time limit field.\nThe inode hard &amp; soft limit fields.\nThe current inodes field.\nThe file quote time limit field.\nAll block &amp; inode limits.\nThe current space field.\nThe time limit fields.\nThe space &amp; inodes usage fields.\nThe type of quota format to use.\nThe scope of the quota.\nIndicates the quota fields that are valid to read from.\nSpecify a user quota\nReturns the set containing all flags.\nCurrent number of allocated inodes.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nTime limit for excessive disk use.\nThe absolute limit on disk quota blocks allocated.\nPreferred limit on disk quota blocks\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns an empty set of flags\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nTime limit for excessive files.\nMaximum number of allocated inodes.\nPreferred inode limit\nInserts the specified flags in-place.\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nCurrent occupied space (bytes).\nGet disk quota limits and current usage for the given …\nDisable disk quotas for a block device.\nTurn on disk quotas for a block device.\nConfigure quota values for the specified fields for a …\nUpdate the on-disk copy of quota usages for a filesystem.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nSet the time limit for excessive disk use.\nSet the absolute limit on disk quota blocks allocated.\nSet the preferred limit on disk quota blocks allocated.\nSet the time limit for excessive files.\nSet the maximum number of allocated inodes.\nSet the preferred limit of allocated inodes.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nToggles the specified flags in-place.\nHow exactly should the system be rebooted.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEnable or disable the reboot keystroke (Ctrl-Alt-Delete).\nIterator over <code>FdSet</code>.\nReturns an iterator over the file descriptors in the set.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFinds the highest file descriptor in the set.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMonitors file descriptors for readiness with an altered …\nMonitors file descriptors for readiness\nCopy up to <code>count</code> bytes to <code>out_fd</code> from <code>in_fd</code> starting at …\nUse the given signal-catching function, which takes in the …\nAction to take on receipt of a signal. Corresponds to …\nUse the given signal-catching function, which takes in the …\nDefault signal handling.\nUsed to request asynchronous notification of the …\nA signal handler.\nRequest that the signal be ignored.\nNo notification will be delivered\nUsed to request asynchronous notification of certain …\nThe signal given by <code>signal</code> will be delivered to the …\nThe signal <code>signal</code> is queued to the thread whose LWP ID is …\nReturns the set containing all flags.\nReturns name of signal.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns an empty set of flags\nReturns the flags set on the action.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nReturns the action’s handler.\nInserts the specified flags in-place.\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nSend a signal to a process group (see killpg(3)).\nReturns the set of signals that are blocked during …\nCreates a new action.\n<strong>Note:</strong> this constructor does not allow the user to set the …\nReturns the complement of this set of flags.\nManages the signal mask (set of blocked signals) for the …\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nChanges the action taken by a process on receipt of a …\nSignal management (see signal(3p))\nExamine and change blocked signals.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nAdds the set of signals to the signal mask for the calling …\nGets the currently blocked (masked) set of signals for the …\nSets the set of signals as the signal mask for the calling …\nSets the set of signals as the signal mask, and returns …\nRemoves the set of signals from the signal mask for the …\nToggles the specified flags in-place.\nSuspends execution of the calling thread until one of the …\nA helper struct for creating, reading and closing a …\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns an empty set of flags\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nCreates a new file descriptor for reading signals.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nToggles the specified flags in-place.\nThese constants specify the protocol family to be used in …\nInterface to kernel crypto API\nSet the length of associated authentication data (AAD) …\nSet IV for <code>AF_ALG</code> crypto API.\nSet crypto operation for <code>AF_ALG</code> crypto API. It may be one …\nAppleTalk\nAccess to raw ATM PVCs\nAmateur radio AX.25 protocol\nFurther receptions and transmissions will be disallowed.\nA type-safe zero-copy wrapper around a single control …\nA type-safe wrapper around a single control message, as …\nSupports datagrams (connectionless, unreliable messages of …\nRepresents a socket option that can be accessed or set. …\nIPv4 Internet protocols (see <code>ip(7)</code>)\nIPv6 Internet protocols (see <code>ipv6(7)</code>)\nRequest for multicast socket operations\nConfigure the sending addressing and interface for v4\nRequest for ipv6 multicast socket operations\nConfigure the sending addressing and interface for v6\nIPX - Novell protocols\nDatalink address (MAC)\nHardware Address\nSet the <code>close-on-exec</code> flag for the file descriptor …\nReceive flags: Control Data was discarded (buffer too …\nEnables nonblocking operation; if the operation would …\nTerminates a record (when this notion is supported, as for …\nThis flag specifies that queued errors should be received …\nSends or requests out-of-band data on sockets that support …\nPeeks at an incoming message. The data is treated as …\nFor raw (<code>Packet</code>), Internet datagram (since Linux …\nReceive operation blocks until the full amount of data can …\nFlags for send/recv and their relatives\nKernel user interface device (see <code>netlink(7)</code>)\nAuditing (ref)\nNetlink interface to request information about ciphers …\nDECnet routing messages (ref)\nAccess to FIB lookup from user space (ref)\nTransport IPv6 packets from netfilter to user space.  Used …\nOpen-iSCSI (ref)\nKernel messages to user space (ref)\nNetfilter subsystem (ref)\nInfiniband RDMA (ref)\nReceives routing and link updates and may be used to …\nSCSI Transports (ref)\nSELinux event notifications. (ref)\nQuery information about sockets of various protocol …\nReserved for user-mode socket protocols (ref)\nLow level packet interface (see <code>packet(7)</code>)\nProvides raw network protocol access.\nProvides a reliable datagram layer that does not guarantee …\nFurther receptions will be disallowed.\nSet close-on-exec on the new descriptor\nSet non-blocking mode on the new socket\nReceived version of [<code>ControlMessage::ScmCredentials</code>][…\nA message of type <code>SCM_CREDENTIALS</code>, containing the pid, uid …\nReceived version of [<code>ControlMessage::ScmRights</code>][…\nA message of type <code>SCM_RIGHTS</code>, containing an array of file …\nA message of type <code>SCM_TIMESTAMP</code>, containing the time the …\nProvides a sequenced, reliable, two-way connection- based …\nRepresents a socket option that can be accessed or set. …\nRepresents a socket address\nAdditional socket options\nConstants used in <code>socket</code> and <code>socketpair</code> to specify the …\nThese constants are used to specify the communication …\nProvides sequenced, reliable, two-way, connection- based …\nTCP protocol (ip(7))\nUDP protocol (ip(7))\nUDP Generic Receive Offload (GRO) allows receiving …\nUDP GSO makes it possible for applications to generate …\nLocal communication (see <code>unix(7)</code>)\nA wrapper around <code>sockaddr_un</code>.\nUnix credentials of the sending process.\nUnspecified address family, (see <code>getaddrinfo(3)</code>)\nFurther  transmissions will be disallowed.\nITU-T X.25 / ISO-8208 protocol (see <code>x25(7)</code>)\nAccept a connection on a socket\nAccept a connection on a socket\nPhysical-layer address (MAC)\nReturns the set containing all flags.\nReturns the set containing all flags.\nIf this address represents an abstract socket, return its …\nConversion from nix’s SockAddr type to the underlying …\nBind a name to a socket\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nContext Identifier (CID)\nIterate over the valid control messages pointed to by this …\nInitiate a connection on a socket\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns an empty set of flags\nReturns an empty set of flags\nAlways AF_PACKET\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nCreate a new <code>AddressFamily</code> from an integer value retrieved …\nGet the address of the peer connected to the socket <code>fd</code>.\nGet the current address to which the socket <code>fd</code> is bound.\nGet the current value for the requested socket option\nReturns the group identifier\nLength of MAC address\nARP hardware type\nInterface number\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGets the IP address associated with this socket address.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nListen for connections on a socket\nCreate a new sockaddr_un representing a filesystem path.\nCreates a new instance with the credentials of the current …\nInstantiate a new <code>IpMembershipRequest</code>\nInstantiate a new <code>Ipv6MembershipRequest</code>\nCreate a new <code>sockaddr_un</code> representing an address in the “…\nCreate a new IpAddr that contains an IPv4 address.\nCreate a new IpAddr that contains an IPv6 address.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nIf this address represents a filesystem path, return that …\nReturns the process identifier\nPacket type\nGets the port number associated with this socket address\nPort number\nPhysical-layer protocol\nReceive data from a connection-oriented socket. Returns …\nReceive data from a connectionless or connection-oriented …\nAn extension of <code>recvmsg</code> that allows the caller to receive …\nReceive message in scatter-gather vectors from a socket, …\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nReturn the eight 16-bit segments that make up this address\nSend data to a connection-oriented socket. Returns the …\nAn extension of <code>sendmsg</code> that allows the caller to transmit …\nSend data in scatter-gather vectors to a socket, possibly …\nSend a message to a socket\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nSets the value for the requested socket option\nShut down part of a full-duplex connection.\nReturn the appropriate <code>SockAddr</code> type from a …\nCreate an endpoint for communication\nCreate a pair of connected sockets\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nReturns the user identifier\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFlags for <code>fchmodat</code> function.\nFlags for <code>utimensat</code> function.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns an empty set of flags\nReturns an empty set of flags\nChange the file permission bits of the file specified by a …\nChange the file permission bits.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nChange the access and modification times of the file …\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nChange the access and modification times of a file without …\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nChange the access and modification times of a file.\nChange the access and modification times of a file.\nSize of a block\nTotal data blocks in filesystem\nFree blocks available to unprivileged user\nFree blocks in filesystem\nTotal file nodes in filesystem\nFree file nodes in filesystem\nFilesystem ID\nMagic code defining system type\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum length of filenames\nOptimal transfer block size\nFile system mount Flags\nAppend-only file\nImmutable file\nAllow mandatory locks on the filesystem\nDo not update access times on files\nDo not interpret character or block-special devices\nDo not update access times on files\nDo not allow execution of binaries on the filesystem\nDo not allow the set-uid bits to have an effect\nRead Only\nUpdate access time relative to modify/change time\nAll IO should be done synchronously\nWrite on file/directory/symlink\nWrapper around the POSIX <code>statvfs</code> struct\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nget the file system block size\nGet the number of blocks.\nGet the number of free blocks for unprivileged users\nGet the number of free blocks in the file system\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns an empty set of flags\nGet the total number of file inodes\nGet the number of free file inodes for unprivileged users\nGet the number of free file inodes\nGet the file system id\nGet the mount flags\nGet the fundamental file system block size\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nReturn a <code>Statvfs</code> object with information about <code>fd</code>\nInserts the specified flags in-place.\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nGet the maximum filename length\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nReturn a <code>Statvfs</code> object with information about the <code>path</code>\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nToggles the specified flags in-place.\nSystem info structure returned by <code>sysinfo</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the load average tuple.\nCurrent number of processes.\nReturns the total amount of installed RAM in Bytes.\nReturns the amount of completely unused RAM in Bytes.\nReturns the amount of unused swap memory in Bytes.\nReturns the amount of swap memory in Bytes.\nReturns system information.\nReturns the time since system boot.\nBaud rates supported by the system.\nFlags for setting the control mode of a terminal\nSpecify how transmission flow should be altered\nSpecify a combination of the input and output buffers to …\nFlags for configuring the input mode of a terminal\nFlags for setting any local modes\nFlags for configuring the output mode of a terminal\nSpecify when a port configuration change should occur.\nIndices into the <code>termios.c_cc</code> array for special characters.\nFlush data that was received but not read\nTransmit a STOP character, which should disable a …\nFlush both received data not read and written data not …\nTransmit a START character, which should re-enable a …\nFlush data written but not transmitted\nSuspend transmission\nResume transmission\nThe change occurs after all output has been written\nSame as <code>TCSADRAIN</code>, but will also flush the input buffer\nThe change will occur immediately\nStores settings for the termios API\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nGet input baud rate (see cfgetispeed(3p)).\nGet output baud rate (see cfgetospeed(3p)).\nConfigures the port to something like the “raw” mode …\nSet input baud rate (see cfsetispeed(3p)).\nSet output baud rate (see cfsetospeed(3p)).\nSet both the input and output baud rates (see termios(3)).\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nControl characters (see <code>termios.c_cc</code> documentation)\nControl mode flags (see <code>termios.c_cflag</code> documentation)\nReturns an empty set of flags\nReturns an empty set of flags\nReturns an empty set of flags\nReturns an empty set of flags\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nInput mode flags (see <code>termios.c_iflag</code> documentation)\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nLocal mode flags (see <code>termios.c_lflag</code> documentation)\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nOutput mode flags (see <code>termios.c_oflag</code> documentation)\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nBlock until all output data is written (see tcdrain(3p)).\nSuspend or resume the transmission or reception of data …\nDiscard data in the output or input queue (see tcflush(3p)…\nReturn the configuration of a port tcgetattr(3p)).\nGet the session controlled by the given terminal (see …\nSend a break for a specific duration (see tcsendbreak(3p)).\nSet the configuration for a terminal (see tcsetattr(3p)).\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMakes a new <code>TimeSpec</code> with given number of microseconds.\nMakes a new <code>TimeVal</code> with given number of microseconds.\nMakes a new <code>TimeSpec</code> with given number of nanoseconds.\nMakes a new <code>TimeVal</code> with given number of nanoseconds.  …\nThe type of the clock used to mark the progress of the …\nAn enumeration allowing the definition of the expiration …\nA timerfd instance. This is also a file descriptor, you …\nAdditional flags to change the behaviour of the file …\nFlags that are used for arming the timer.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns an empty set of flags\nReturns an empty set of flags\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nGet the parameters for the alarm currently set, if any.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nCreates a new timer based on the clock defined by <code>clockid</code>. …\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nSets a new alarm on the timer.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nRemove the alarm if any is set.\nWait for the configured alarm to expire.\nA slice of memory in a remote process, starting at address …\nThe starting address of this slice (<code>iov_base</code>).\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe number of bytes in this slice (<code>iov_len</code>).\nRead from <code>fd</code> at <code>offset</code> filling buffers in <code>iov</code>.\nRead data directly from another process’s virtual memory …\nWrite data directly to another process’s virtual memory …\nWrite to <code>fd</code> at <code>offset</code> from buffers in <code>iov</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe process was previously stopped but has resumed …\nThe process exited normally (as with <code>exit()</code> or returning …\nThe traced process was stopped by a <code>PTRACE_EVENT_*</code> event. …\nThe traced process was stopped by execution of a system …\nThe process was killed by the given signal. The third field\nThere are currently no state changes to report in any …\nThe process is alive, but was stopped by the given signal. …\nDon’t reap, just poll status.\nPossible return values from <code>wait()</code> or <code>waitpid()</code>.\nWait on all children, regardless of type\nDon’t wait on children of other threads in this group\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns an empty set of flags\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert a raw <code>wstatus</code> as returned by <code>waitpid</code>/<code>wait</code> into a …\nInserts the specified flags in-place.\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nExtracts the PID from the WaitStatus unless it equals …\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nToggles the specified flags in-place.\nClock identifier\nGets the raw <code>clockid_t</code> wrapped by <code>self</code>\nGet the clock id of the specified process id, (see …\nGet the resolution of the specified clock, (see …\nGet the time of the specified clock, (see clock_gettime(2)…\nSet the time of the specified clock, (see clock_settime(2)…\nReturns the argument unchanged.\nCreates <code>ClockId</code> from raw <code>clockid_t</code>\nCalls <code>U::from(self)</code>.\nReturns the current time on the clock id\nReturns <code>ClockId</code> of a <code>pid</code> CPU-time clock\nReturns resolution of the clock id\nSets time to <code>timespec</code> on the clock id\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMaximum number of I/O operations in a single list I/O call …\nMaximum number of outstanding asynchronous I/O operations …\nThe maximum amount by which a process can decrease its …\nMaximum length of argument to the exec functions including …\nMaximum number of functions that may be registered with …\nOptions for access()\nMaximum obase values allowed by the bc utility.\nMaximum number of elements permitted in an array by the bc …\nMaximum scale value allowed by the bc utility.\nMaximum length of a string constant accepted by the bc …\nMaximum number of simultaneous processes per real user ID.\nMaximum number of weights that can be assigned to an entry …\nMaximum number of timer expiration overruns.\nMaximum number of expressions that can be nested within …\nMinimum number of bits needed to represent, as a signed …\nTest for existence of file.\nFlags for <code>fchownat</code> function.\nRepresents the successful result of calling <code>fork</code>\nInitial size of <code>getgrgid_r</code> and <code>getgrnam_r</code> data buffers\nInitial size of <code>getpwuid_r</code> and <code>getpwnam_r</code> data buffers\nGroup identifier\nRepresentation of a Group, based on <code>libc::group</code>\nMaximum length of a host name (not including the …\nMaximum number of iovec structures that one process has …\nUnless otherwise noted, the maximum length, in bytes, of a …\nMaximum number of links to a single file.\nMaximum length of a login name.\nFlags for <code>linkat</code> function.\nMaximum number of bytes in a terminal canonical input line.\nMinimum number of bytes for which space is available in a …\nThe maximum number of open message queue descriptors a …\nThe maximum number of message priorities supported by the …\nMaximum number of bytes in a filename (not including the …\nMaximum number of simultaneous supplementary group IDs per …\nA value one greater than the maximum value that the system …\nThe size of a system page in bytes.\nMaximum number of bytes the implementation will store as a …\nMaximum number of bytes that is guaranteed to be atomic …\nSymbolic links can be created.\nMinimum number of bytes of storage actually allocated for …\nRecommended increment for file transfer sizes between the …\nMaximum recommended file transfer size.\nMinimum recommended file transfer size.\nRecommended file transfer buffer alignment.\nVariable names for <code>pathconf</code>\nProcess identifier\nConstant for UID = 0\nTest for read permission.\nMaximum number of bytes in a symbolic link.\nSpecify an offset relative to the current file location.\nSpecify an offset relative to the next location in the …\nSpecify an offset relative to the end of the file.\nSpecify an offset relative to the next hole in the file …\nSpecify an offset relative to the start of the file.\nVariable names for <code>sysconf</code>\nUser identifier\nFlags for <code>unlinkat</code> function.\nRepresentation of a User, based on <code>libc::passwd</code>\nTest for write permission.\nDirective that tells <code>lseek</code> and <code>lseek64</code> what the offset is …\nTest for execute (search) permission.\nThe implementation supports the Terminal Characteristics …\nThe implementation supports the C-Language Binding option.\nThe implementation supports the C-Language Development …\nThe implementation supports the FORTRAN Development …\nThe implementation supports the FORTRAN Runtime Utilities …\nThe implementation supports the creation of locales by the …\nThe implementation supports the Batch Environment Services …\nThe implementation supports the Batch Accounting option.\nThe implementation supports the Batch Checkpoint/Restart …\nThe implementation supports the Locate Batch Job Request …\nThe implementation supports the Batch Job Message Request …\nThe implementation supports the Track Batch Job Request …\nThe implementation supports the Software Development …\nThe implementation supports the User Portability Utilities …\nInteger value indicating version of the Shell and …\nThe implementation supports the Advisory Information …\nThe implementation supports asynchronous input and output.\nAsynchronous input or output operations may be performed …\nThe implementation supports barriers.\nThe use of <code>chown</code> and <code>fchown</code> is restricted to a process with\nThe implementation supports clock selection.\nThe implementation supports the Process CPU-Time Clocks …\nThe implementation supports the File Synchronization …\nThe implementation supports the IPv6 option.\nThe implementation supports job control.\nThe implementation supports memory mapped Files.\nThe implementation supports the Process Memory Locking …\nThe implementation supports the Range Memory Locking …\nThe implementation supports memory protection.\nThe implementation supports the Message Passing option.\nThe implementation supports the Monotonic Clock option.\nPathname components longer than {NAME_MAX} generate an …\nThe implementation supports the Prioritized Input and …\nThe implementation supports the Process Scheduling option.\nPrioritized input or output operations may be performed …\nThe implementation supports the Raw Sockets option.\nThe implementation supports read-write locks.\nThe implementation supports realtime signals.\nThe implementation supports the Regular Expression …\nEach process has a saved set-user-ID and a saved …\nThe implementation supports semaphores.\nThe implementation supports the Shared Memory Objects …\nThe implementation supports the POSIX shell.\nThe implementation supports the Spawn option.\nThe implementation supports spin locks.\nThe implementation supports the Process Sporadic Server …\nThe implementation supports the Synchronized Input and …\nSynchronized input or output operations may be performed …\nThe implementation supports threads.\nThe implementation supports the Thread Stack Address …\nThe implementation supports the Thread Stack Size …\nThe implementation supports the Thread CPU-Time Clocks …\nThe implementation supports the Thread Execution …\nThe implementation supports the Non-Robust Mutex Priority …\nThe implementation supports the Non-Robust Mutex Priority …\nThe implementation supports the Thread Process-Shared …\nThe implementation supports the Robust Mutex Priority …\nThe implementation supports the Robust Mutex Priority …\nThe implementation supports thread-safe functions.\nThe implementation supports the Thread Sporadic Server …\nThe implementation supports timeouts.\nThe implementation supports timers.\nThe implementation supports the Trace option.\nThe implementation supports the Trace Event Filter option.\nThe implementation supports the Trace Inherit option.\nThe implementation supports the Trace Log option.\nThe implementation supports the Typed Memory Objects …\nThe implementation provides a C-language compilation …\nThe implementation provides a C-language compilation …\nThe implementation provides a C-language compilation …\nThe implementation provides a C-language compilation …\nThis symbol shall be defined to be the value of a …\nInteger value indicating version of this standard …\nThe implementation supports the X/Open Encryption Option …\nThe implementation supports the Issue 4, Version 2 Enhanced\nThe implementation supports the X/Open Realtime Option …\nThe implementation supports the X/Open Realtime Threads …\nThe implementation supports the Issue 4, Version 2 Shared …\nThe implementation supports the XSI STREAMS Option Group.\nThe implementation supports the XSI option\nInteger value indicating version of the X/Open Portability …\nChecks the file named by <code>path</code> for accessibility according …\nAlarm signal scheduling.\nReturns the set containing all flags.\nGet the raw <code>uid_t</code> wrapped by <code>self</code>.\nGet the raw <code>gid_t</code> wrapped by <code>self</code>.\nGet the raw <code>pid_t</code> wrapped by <code>self</code>.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nChange the current working directory of the calling …\nChange the ownership of the file at <code>path</code> to be owned by …\nClose a raw file descriptor\nReturns <code>true</code> all of the flags in <code>other</code> are contained …\nReturns Uid of calling process. This is practically a more …\nReturns Gid of calling process. This is practically a more …\nDaemonize this process by detaching from the controlling …\nHome directory\nCreate a copy of the specified file descriptor (see dup(2)…\nCreate a copy of the specified file descriptor using the …\nCreate a new copy of the specified file descriptor using …\nReturns effective Uid of calling process. This is …\nReturns effective Gid of calling process. This is …\nReturns an empty set of flags\nReplace the current process image with a new one (see …\nReplace the current process image with a new one (see …\nExecute program relative to a directory file descriptor …\nReplace the current process image with a new one and …\nReplace the current process image with a new one and …\nChange the current working directory of the process to the …\nChange the ownership of the file referred to by the open …\nChange the ownership of the file at <code>path</code> to be owned by …\nSynchronize the data of a file\nReplace the current process image with a new one (see …\nCreate a new child process duplicating the parent process (…\nLike <code>pathconf</code>, but works with file descriptors instead of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nGet a group by GID.\nGet a user by name.\nGet a group by name.\nCreates <code>Uid</code> from raw <code>uid_t</code>.\nCreates <code>Gid</code> from raw <code>gid_t</code>.\nCreates <code>Pid</code> from raw <code>pid_t</code>.\nGet a user by UID.\nSynchronize changes to a file\nTruncate a file to a specified length\nUser information\nReturns the current directory as a <code>PathBuf</code>\nGet the effective group ID\nGet the effective user ID\nGet the real group ID\nCalculate the supplementary group access list.\nGet the list of supplementary group IDs of the calling …\nGet the host name and store it in the provided buffer, …\nGet the group id of the calling process (see getpgrp(3)).\nGet the pid of this process (see getpid(2)).\nGet the pid of this processes’ parent (see getpid(2)).\nGet the process group ID of a session leader getsid(2).\nGet the caller’s thread ID (see gettid(2).\nGet a real user ID\nGroup ID\nGroup ID\nInitialize the supplementary group access list.\nInserts the specified flags in-place.\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturn <code>true</code> if this is the child process of the <code>fork()</code>\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if this is the parent process of the <code>fork()</code>\nReturns true if the <code>Uid</code> represents privileged user - root. …\nLink one file to another file\nMove the read/write file offset.\nList of Group members\nCreates new directory <code>path</code> with access rights <code>mode</code>.  (see …\nCreates new fifo special file (named pipe) with path <code>path</code> …\nCreates new fifo special file (named pipe) with path <code>path</code> …\nCreates a regular file which persists even after process …\nUsername\nGroup name\nReturns the complement of this set of flags.\nReturns PID of parent of calling process\nUser password (probably encrypted)\nGroup password\nGet path-dependent configurable system variables (see …\nSuspend the thread until a signal is received.\nCreate an interprocess channel.\nLike <code>pipe</code>, but allows setting certain file descriptor …\nRead from a raw file descriptor.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nSet the effective group ID\nSet the effective user ID\nSet the group identity used for filesystem checks …\nSet the user identity used for filesystem checks …\nSet the group ID\nSet the list of supplementary group IDs for the calling …\nSet the system host name (see sethostname(2)).\nSet a process group ID (see setpgid(2)).\nSets the real, effective, and saved gid. (see setresuid(2))\nSets the real, effective, and saved uid. (see setresuid(2))\nCreate new session and set process group id (see setsid(2)…\nSet the user ID\nPath to shell\nSuspend execution for an interval of time\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nCreates a symbolic link at <code>path2</code> which points to <code>path1</code>.\nCommit filesystem caches to disk\nGet configurable system variables (see sysconf(3))\nGet the terminal foreground process group (see tcgetpgrp(3)…\nSet the terminal foreground process group (see tcgetpgrp(3)…\nReturns PID of calling process\nToggles the specified flags in-place.\nTruncate a file to a specified length\nGet the name of the terminal device that is open on file …\nUser ID\nRemove a directory entry\nRemove a directory entry\nWrite to a raw file descriptor.\nDisable process accounting\nEnable process accounting\nCancel an previously set alarm signal.\nSchedule an alarm signal.")