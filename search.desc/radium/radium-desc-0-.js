searchState.loadedDescShard("radium", 0, "<code>radium</code> provides a series of helper traits providing a …\nA maybe-atomic shared mutable fundamental type <code>T</code>.\nStores a value into this object if the currently-stored …\nStores a value into this object if the currently-stored …\nStores a value into this object if the currently-stored …\nIf the underlying value is atomic, calls <code>fence</code> with the …\nAdds <code>value</code> to the currently-stored value, wrapping on …\nPerforms a bitwise “and” on the currently-stored value …\nPerforms a bitwise “nand” on the currently-stored …\nPerforms a bitwise “or” on the currently-stored value …\nSubtracts <code>value</code> from the currently-stored value, wrapping …\nPerforms a bitwise “xor” on the currently-stored value …\nReturns a mutable reference to the underlying value.\nConsumes the wrapper and returns the contained value.\nLoad a value from this object.\nMarker traits used by <code>Radium</code>.\nCreates a new value of this type.\nStore a value in this object.\nSwap with the value stored in this object.\nBest-effort atomic types\nTypes supporting maybe-atomic bitwise operations.\nTypes supporting maybe-atomic arithmetic operations.\n<code>AtomicBool</code>\n<code>AtomicI16</code>\n<code>AtomicI32</code>\n<code>AtomicI64</code>\n<code>AtomicI8</code>\n<code>AtomicIsize</code>\n<code>AtomicPtr</code>\n<code>AtomicU16</code>\n<code>AtomicU32</code>\n<code>AtomicU64</code>\n<code>AtomicU8</code>\n<code>AtomicUsize</code>")