searchState.loadedDescShard("mockito", 0, "Mockito is a library for <strong>generating and delivering HTTP </strong>…\nAll matchers must match\nMatches any path or any header value.\nAt least one matcher must match\nMatches the body content as a binary file\nA lock can’t be bypassed\nContains information about an error occurence\nThe type of an error\nMatches the exact path or header value. There’s also an …\nFile not found\nInvalid header name\nThe status code is invalid or out of range\nMatches a specified JSON body from a <code>serde_json::Value</code>\nMatches a specified JSON body from a <code>String</code>\nAllows matching the request path, headers or body in …\nChecks that a header is not present in the request.\nStores information about a mocked request. Should be …\nMatches a partial JSON body from a <code>serde_json::Value</code>\nMatches a specified partial JSON body from a <code>String</code>\nMatches a path or header value by a regular expression.\nStores a HTTP request\nFailed to read the request body\nFailed to write the response body\nCould not deliver a response\nOne instance of the mock server.\nThe server is busy\nThe server is not running\nA handle around a pooled <code>Server</code> object which dereferences …\nOptions to configure a mock server. Provides a default …\nMatches a URL-encoded key/value pair, where both key and …\nAsserts that the expected amount of requests (defaults to …\nSame as <code>Mock::assert</code> but async.\nAutomatically call <code>assert()</code> before dropping a mock …\nReturns the request body or an error, if the body hasn’t …\nSome errors come with more context\nRegisters the mock to the server - your mock will be …\nSame as <code>Mock::create</code> but async.\nSets the expected amount of requests that this mock is …\nSets the minimum amount of requests that this mock is …\nSets the maximum amount of requests that this mock is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nChecks whether the provided header field exists\nRetrieves all the header values for the given header field …\nThe server host (defaults to 127.0.0.1)\nThe host and port of the mock server. Can be used with …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe type of this error\nAllows matching a particular request body when responding …\nAllows matching a particular request header when …\nAllows matching against the query part when responding …\nReturns whether the expected amount of requests (defaults …\nSame as <code>Mock::matched</code> but async.\nThe HTTP method\nInitializes a mock with the given HTTP <code>method</code> and <code>path</code>.\nFetches a new mock server from the server pool.\nSame as <code>Server::new</code> but async.\nStarts a new server with the given options. Note that <strong>this </strong>…\nSame as <code>Server::new_with_opts</code> but async.\n<strong>DEPRECATED:</strong> Use <code>Server::new_with_opts</code> instead.\n<strong>DEPRECATED:</strong> Use <code>Server::new_with_opts_async</code> instead.\nThe path excluding the query part\nThe path including the query part\nThe server port (defaults to a randomly assigned free port)\nRemoves the mock from the server.\nSame as <code>Mock::remove</code> but async.\nRemoves all the mocks stored on the server.\n<strong>DEPRECATED:</strong> Use <code>Server::reset</code> instead. The implementation …\nThe raw address of the mock server.\nThe URL of the mock server (including the protocol).\nSets the body of the mock response. Its <code>Content-Length</code> is …\nSets the body of the mock response from the contents of a …\n<strong>DEPRECATED:</strong> Replaced by <code>Mock::with_chunked_body</code>.\nSets the body of the mock response dynamically while …\nSets the body of the mock response dynamically. The …\nSets a header of the mock response.\nSets the status code of the mock response. The default …")