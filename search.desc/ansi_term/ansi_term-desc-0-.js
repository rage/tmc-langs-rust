searchState.loadedDescShard("ansi_term", 0, "This is a library for controlling colours and formatting, …\nAn <code>ANSIByteString</code> represents a formatted series of bytes.  …\nA function to construct an <code>ANSIByteStrings</code> instance.\nA set of <code>ANSIByteString</code>s collected together, in order to be\nAn <code>ANSIGenericString</code> includes a generic string type and a …\nA set of <code>ANSIGenericString</code>s collected together, in order …\nAn ANSI String is a string coupled with the <code>Style</code> to …\nA function to construct an <code>ANSIStrings</code> instance.\nA set of <code>ANSIString</code>s collected together, in order to be …\nColour #0 (foreground code <code>30</code>, background code <code>40</code>).\nColour #4 (foreground code <code>34</code>, background code <code>44</code>).\nColor is a type alias for <code>Colour</code>.\nA colour is one specific type of ANSI escape code, and can …\nColour #6 (foreground code <code>36</code>, background code <code>46</code>).\nA colour number from 0 to 255, for use in 256-colour …\nColour #2 (foreground code <code>32</code>, background code <code>42</code>).\nLike <code>ANSIString</code>, but only displays the difference between …\nLike <code>ANSIString</code>, but only displays the style prefix.\nColour #5 (foreground code <code>35</code>, background code <code>45</code>).\nA 24-bit RGB color, as specified by ISO-8613-3.\nColour #1 (foreground code <code>31</code>, background code <code>41</code>).\nA style is a collection of properties that can format a …\nLike <code>ANSIString</code>, but only displays the style suffix.\nColour #7 (foreground code <code>37</code>, background code <code>47</code>).\nColour #3 (foreground code <code>33</code>, background code <code>43</code>).\nThe style’s background colour, if it has one.\nReturns a <code>Style</code> with the blink property set.\nReturns a <code>Style</code> with the foreground colour set to this …\nReturns a <code>Style</code> with the bold property set.\nReturns a <code>Style</code> with the foreground colour set to this …\nReturns a style with <em>no</em> properties set. Formatting text …\nReturns a <code>Style</code> with the dimmed property set.\nReturns a <code>Style</code> with the foreground colour set to this …\nReturns a <code>Style</code> with the foreground colour property set.\nThe style’s foreground colour, if it has one.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nYou can turn a <code>Colour</code> into a <code>Style</code> with the foreground …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a <code>Style</code> with the hidden property set.\nReturns a <code>Style</code> with the foreground colour set to this …\nThe infix bytes between this style and <code>next</code> style. These …\nThe infix bytes between this colour and <code>next</code> colour. These …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether this style is blinking.\nWhether this style is bold.\nWhether this style is dimmed.\nWhether this style is hidden.\nWhether this style is italic.\nReturn true if this <code>Style</code> has no actual styles, and can be …\nWhether this style has reverse colours.\nWhether this style is struckthrough.\nWhether this style is underlined.\nReturns a <code>Style</code> with the italic property set.\nReturns a <code>Style</code> with the foreground colour set to this …\nCreates a new Style with no properties set.\nReturns a <code>Style</code> with the foreground colour set to this …\nReturns a <code>Style</code> with the background colour property set.\nReturns a <code>Style</code> with the foreground colour set to this …\nPaints the given text with this colour, returning an ANSI …\nPaints the given text with this colour, returning an ANSI …\nThe prefix bytes for this style. These are the bytes that …\nThe prefix bytes for this colour as a <code>Style</code>. These are the …\nReturns a <code>Style</code> with the reverse property set.\nReturns a <code>Style</code> with the foreground colour set to this …\nReturns a <code>Style</code> with the strikethrough property set.\nReturns a <code>Style</code> with the foreground colour set to this …\nDirectly access the style\nDirectly access the style mutably\nReturn a substring of the given ANSIStrings sequence, …\nThe suffix for this style. These are the bytes that tell …\nThe suffix for this colour as a <code>Style</code>. These are the bytes …\nReturns a <code>Style</code> with the underline property set.\nReturns a <code>Style</code> with the foreground colour set to this …\nReturn a concatenated copy of <code>strs</code> without the formatting, …\nReturn the unstyled length of ANSIStrings. This is …\nWrite an <code>ANSIByteString</code> to an <code>io::Write</code>.  This writes the …\nWrite <code>ANSIByteStrings</code> to an <code>io::Write</code>.  This writes the …\nWrite an <code>ANSIByteString</code> to an <code>io::Write</code>.  This writes the …\nWrite <code>ANSIByteStrings</code> to an <code>io::Write</code>.  This writes the …")