searchState.loadedDescShard("textwrap", 0, "<code>textwrap</code> provides functions for word wrapping and filling …\nSimple and default way to split words: splitting on …\nAn iterator over the lines of the input string which owns a\nUse this as a <code>Wrapper.splitter</code> to avoid any kind of …\nAn interface for splitting words.\nAn iterator over the lines of the input string which …\nA Wrapper holds settings for wrapping and filling text. …\nChange <code>self.break_words</code>. This controls if words longer …\nAllow long words to be broken if they cannot fit on a line.\nRemoves common leading whitespace from each line.\nFill a line of text at <code>width</code> characters. Strings are …\nFill a line of text at <code>self.width</code> characters. Strings are …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAdd prefix to each non-empty line.\nChange <code>self.initial_indent</code>. The initial indentation is …\nIndentation used for the first line of output.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLazily wrap a line of text at <code>self.width</code> characters. …\nCreate a new Wrapper for wrapping at the specified width. …\nReturn all possible splits of word. Each split is a triple …\nThe method for splitting words. If the <code>hyphenation</code> feature …\nChange <code>self.subsequent_indent</code>. The subsequent indentation …\nIndentation used for subsequent lines of output.\nThe width in columns at which the text will be wrapped.\nUse the given <code>WordSplitter</code> to create a new Wrapper for …\nWrap a line of text at <code>width</code> characters. Strings are …\nWrap a line of text at <code>self.width</code> characters. Strings are …\nLazily wrap a line of text at <code>width</code> characters. Strings are\nLazily wrap a line of text at <code>self.width</code> characters. …")