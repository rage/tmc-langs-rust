searchState.loadedDescShard("zlib_rs", 0, "⚠️ UNSTABLE⚠️\nIf flush is set to <code>Block</code>, a deflate block is completed and …\nIf the parameter flush is set to <code>Finish</code>, pending input is …\nIf flush is set to <code>FullFlush</code>, all output is flushed as with\nif flush is set to <code>NoFlush</code>, that allows deflate to decide …\nIf flush is set to <code>PartialFlush</code>, all pending output is …\nIf the parameter flush is set to <code>SyncFlush</code>, all pending …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPanics\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nspace at comment (only when reading header)\npointer to zero-terminated comment or NULL\ntrue when done reading gzip header (not used when writing …\npointer to extra field or NULL if none\nextra field length (valid if extra != NULL)\nspace at extra (only when reading header)\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ngzip header information passed to and from zlib routines. …\ntrue if there was or will be a header crc\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\npointer to zero-terminated file name or NULL\nspace at name (only when reading header)\noperating system\ntrue if compressed data believed to be text\nmodification time\nextra flags (not used when writing a gzip file)\nThe current stream state\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nFor the default windowBits of 15 and memLevel of 8, this …\nReturns\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSafety\nSafety\nSafety\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSafety\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSafety\nSafety\nSafety\nSafety\nInitialize the stream in an inflate state\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInflates <code>source</code> into <code>dest</code>, and writes the final inflated …\nPointer to the start of the <code>ReadBuf</code>\nReturns the total capacity of the buffer.\nClears the buffer, resetting the filled region to empty.\nReturns a shared reference to the filled portion of the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns true if there are no bytes in this ReadBuf\nReturns the length of the filled part of the buffer")