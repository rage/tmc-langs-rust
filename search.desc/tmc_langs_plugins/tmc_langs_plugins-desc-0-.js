searchState.loadedDescShard("tmc_langs_plugins", 0, "A description of an exercise.\nRepresents configuration based on which submission may be …\nMock policy that ignores the config file and returns false …\nThe result of running an exercise’s test suite against a …\nSpecifies which files are student files. A single …\nThe result of a style check.\nDetermines how style errors are handled.\nNo operation for now. To be possibly implemented later: …\nRuns the Maven clean plugin.\nSee <code>LanguagePlugin::compress_project</code>.\nWrites the bundled tmc-junit-runner into …\nExercise folders or files which are copied from exercise …\nFinds the correct language plug-in for the given exercise …\nExtract a given archive file containing a compressed …\nFinds an R directory. Ignores everything in a __MACOSX …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a Language instance rom a ISO 639-1 code.\nCreate a Language instance rom a ISO 639-3 code.\nParse language from given locale\nThe policy should contain a TmcProjectYml parsed from the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the directory contains a build.xml file, or a …\nChecks the no-tests field of in path/.tmcproject.yml, if …\nChecks if the directory has one of setup.py, …\nChecks if the directory contains R or tests/testthat\nChecks if the directory has a pom.xml file.\nChecks if the directory has a src dir and a Makefile file …\nDetermines whether a file is a student source file.\nChecks whether the path is considered a student source …\nUsed to check for files which should always be overwritten.\nLogs from the test run. The key may be an arbitrary string …\nThe name of the exercise to be shown to the user. Does not …\nParses a project config and calls the helper constructor. …\nThis constructor should store the project config in the …\nScans the exercise at the given path. Immediately exits if …\nThe overall status of a test run.\nStudent folders or files which are copied from submission.\nWhether each test passed and which points were awarded.\nDescriptions of the tests that will be run for this …\nContains functions for zipping and unzipping projects.\nCreate two-letter ISO 639-1 representation of the language.\nCreate string representation of this Language as a ISO …\nGet the English name of this language.\nThe requested file could not be found in the archive\nThis file is probably not a zip archive\nAn Error caused by I/O\nThe text used as an error when a password is required and …\nThis archive is not supported\nError type for Zip\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nFinds a project directory in the given zip and unzips it …\nZips the given directory, only including student files …")