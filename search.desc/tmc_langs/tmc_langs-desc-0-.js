searchState.loadedDescShard("tmc_langs", 0, "The main tmc-langs library. Provides a convenient API to …\nAn error caused by a failed attempt to execute an external …\nThe submission or tests did not compile.\nSupported compression methods.\nA setting in a TmcConfig file.\nCredentials for authenticating with tmc-server.\nA description of an exercise.\nRepresents configuration based on which submission may be …\nFor when no other status seems suitable, or the language …\nMain error type of the library.\nThe trait that each language plug-in must implement.\nMOOC exercise inside the projects directory.\nTMC eercise inside the projects directory.\nError validating TMC params values.\nThe submission and tests compiled and all tests passed.\nA TMC exercise in the projects directory.\nPython version from TmcProjectYml.\nData from a finished course refresh.\nAn exercise from a finished course refresh.\nThe result of running an exercise’s test suite against a …\nThe overall status of a test run.\nA style validation error.\nThe result of a style check.\nDetermines how style errors are handled.\n.tar\n.tar.ztd\nA description of an exercise’s test case.\nThe result of a single test case.\nThe submission compiled but testrun was interrupted.\nThe submission and tests compiled but some tests failed.\nThe main configuration file. A separate one is used for …\nA course configuration file. Contains information of all …\nTmcParams is used to safely construct data for a …\nExtra data from a <code>.tmcproject.yml</code> file.\n.zip\nRun checkstyle or similar plugin to project if applicable, …\nChecks the server for any updates for exercises within the …\nChecks the exercise’s code quality.\nCleans the exercise.\nRuns clean command e.g <code>make clean</code> for make or <code>mvn clean</code> …\nCompresses the exercise to the target path.\nCompresses the exercise to the target path. Returns the …\nThe course’s name.\nDownloads the user’s old submission from the server. …\nDownloads the given exercises, by either downloading the …\nExercise folders or files which are copied from exercise …\nThe course’s exercises in a map with the exercise’s …\nA list of files or directories that will always be …\nA list of files or directories that will always be …\nExtracts the compressed project to the target location.\nExtract a given archive file containing a compressed …\nExtracts student files from the compressed exercise.\nExtracts student files from the compressed project. It …\nIf set, Valgrind errors will be considered test errors.\nVarious utility functions, primarily wrapping the standard …\nFinds valid exercises from the given path.\nSearches the zip for a valid project directory. This …\nA list of files that should always be overwritten by …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a Language instance rom a ISO 639-1 code.\nCreate a Language instance rom a ISO 639-3 code.\nParse language from given locale\nGet the ISO code by its English name.\nFetches a value with the given key.\nParses the available points from the exercise.\nParses exercise files using Self::LINE_COMMENT and …\nFetches the given course’s details, exercises and course …\nGets the exercise packaging configuration.\nReturns configuration which is used to package submission …\nNote: does not save the config on initialization.\nNote: does not save the config on initialization.\nReturns the projects directory for the given client name. …\nReturns the projects dir.\nFetches a setting from the config.\nFetches all the settings from the config.\nInitializes a MoocClient, using and returning the stored …\nInitializes a TestMyCodeClient, using and returning the …\nInserts a value with the given key and value. Returns the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTells if there’s a valid exercise in this archive. …\nTells if there’s a valid exercise in this path. …\nReturns all of the exercises for the given course.\nReturns\nReads or initialises the config for the given client.\nLoads a TmcProjectYml from the given directory. Returns …\nReads or initialises for the client from the given path.\nLoads a TmcProjectYml either from the directory or the …\nAuthenticates with the server, returning a login Token. …\nCreates a login Token from a token string.\nLogs from the test run. The key may be an arbitrary string …\nGet all matching ISO codes by a provided English name …\nMerges the contents of <code>with</code> with <code>self</code>. Empty or missing …\nMigrates an exercise from a location that’s not managed …\nReturns the Python version as a (major, minor, patch) …\nIf set, will cause an error telling the student to update …\nMoves the projects directory from its current location to …\nThe full name of the test.\nThe name of the exercise to be shown to the user. Does not …\nMarks the exercise as not containing any tests.\nContains an utility for reporting warnings.\nSends the paste to the server\nThe list of point names that passing this test may give.\nList of points that were received from the exercise from …\nA nom parser that recognizes a points annotation and …\nNote: used by tmc-server. Walks through each given path, …\nPrepares the exercise stub, copying tmc-junit-runner for …\nPrepares a submission for further processing. Returns the …\nUtility struct for printing progress reports.\nUsed by tmc-server. Refreshes the course.\nRemoves the value with the given key. Returns the removed …\nResets the given exercise\nReinitialises the config file.\nResets all settings in the config, removing those without …\nRuns tests for the exercise.\nRuns the tests for the exercise.\nRuns the tests for the exercise with the given timeout. …\nA safer variant of <code>find_project_dir_in_archive</code> used by …\nOverrides the default sandbox image. e.g. …\nSaves the config struct to the given path.\nSaves the TmcProjectYml to the given directory.\nScans the exercise.\nProduces an exercise description of an exercise directory.\nSets the projects dir. Returns the old projects dir.\nSaves a setting in the config.\nSigns the given serializable value with the given secret …\nThe overall status of a test run.\nStudent folders or files which are copied from submission.\nOverrides the default archive size limit (500 Mb).\nSubmits the exercise to the server\nWhether each test passed and which points were awarded.\nDescriptions of the tests that will be run for this …\nIf set, tests are forcibly stopped after this duration.\nCreate two-letter ISO 639-1 representation of the language.\nCreate string representation of this Language as a ISO …\nGet the English name of this language.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nUnsets the given setting.\nUpdates the mooc exercises in the local projects directory.\nUpdates the tmc exercises in the local projects directory.\nBlocks until the lock can be acquired.\nShared read lock\nShared read lock, create file if it doesn’t exist …\nShared write lock, create file if it doesn’t exist, …\nExclusive write lock\nExclusive write lock, create file if it doesn’t exist …\nExclusive write lock, create file if it doesn’t exist, …\nCopies the file or directory at source into the target …\nNote: creates all intermediary directories if needed.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReads all of the data from source and writes it into a new …\nRemoves whatever is at the path, whether it is a directory …\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitializes the warning reporter with the given closure to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls the warning closure with the given warning.\nThe format for all status updates. May contain some data.\nFinishes the current stage.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nProgresses the current stage.\nStarts a new stage.\nSubscribes to progress reports of type T with callback of …")