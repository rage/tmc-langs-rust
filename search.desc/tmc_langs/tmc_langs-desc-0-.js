searchState.loadedDescShard("tmc_langs", 0, "The main tmc-langs library. Provides a convenient API to …\nThe main error type for tmc-client.\nThe update data type for the progress reporter.\nAn error caused by a failed attempt to execute an external …\nA setting in a TmcConfig file.\nInformation for a course.\nA course configuration file. Contains information of all …\nData for a course.\nDetails for a course.\nExercise for a course.\nCredentials for authenticating with tmc-server.\nA description of an exercise.\nDetails for an exercise.\nRepresents configuration based on which submission may be …\nUsed to respond to feedback questions. See …\nGuard that holds the locked file.\nMain error type of the library.\nThe trait that each language plug-in must implement.\nExercise inside the projects directory.\nExercise submission.\nOrganization information.\nOutput formats for an archive.\nError validating TMC params values.\nAn exercise in the projects directory.\nData from a finished course refresh.\nAn exercise from a finished course refresh.\nCode review.\nThe result of running an exercise’s test suite against a …\nThe result of a style check.\nExercise submission.\nResponse to feedback.\nFinished submission.\nA struct for interacting with the TestMyCode service, …\nThe main configuration file. A separate one is used for …\nTmcParams is used to safely construct data for a …\nAuthentication token.\nUpdated exercises.\nAttempts to log in with the given credentials, returns an …\nRun checkstyle or similar plugin to project if applicable, …\nChecks the server for any updates for exercises within the …\nChecks the status of a submission on the server.\nChecks the exercise’s code quality.\nCleans the exercise.\nRuns clean command e.g <code>make clean</code> for make or <code>mvn clean</code> …\nCompresses the exercise to the target path.\nThe course’s name.\nDownloads the model solution from the given url.\nDownloads the user’s old submission from the server. …\nDownloads the given exercises, by either downloading the …\nExercise folders or files which are copied from exercise …\nThe course’s exercises in a map with the exercise’s …\nExtracts the compressed project to the target location.\nExtract a given archive file containing a compressed …\nExtracts student files from the compressed exercise.\nExtracts student files from the compressed project. It …\nVarious utility functions, primarily wrapping the standard …\nFinds valid exercises from the given path.\nSearches the zip for a valid project directory. Note that …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a Language instance rom a ISO 639-1 code.\nCreate a Language instance rom a ISO 639-3 code.\nParse language from given locale\nParses the available points from the exercise.\nParses exercise files using Self::LINE_COMMENT and …\nFetches the given course’s details, exercises and course …\nFetches the course’s information.\nGets the exercise packaging configuration.\nReturns configuration which is used to package submission …\nFetches the course’s exercises from the server, and …\nFetches an organization.\nFetches all organizations.\nReturns the projects directory for the given client name. …\nFetches a setting from the config.\nFetches all the settings from the config.\nFetches all reviews.\nInitializes a TmcClient, using and returning the stored …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTells if there’s a valid exercise in this path.\nFetches all courses under the given organization.\nReturns all of the exercises for the given course.\nReturns\nAuthenticates with the server, returning a login Token. …\nCreates a login Token from a token string.\nLogs from the test run. The key may be an arbitrary string …\nMark the review as read on the server.\nMigrates an exercise from a location that’s not managed …\nMoves the projects directory from its current location to …\nThe name of the exercise to be shown to the user. Does not …\nCreates a new TmcClient with the given config directory …\nCreates a new TmcClient with the given root URL. The …\nContains an utility for reporting warnings.\nSends the given submission as a paste.\nA nom parser that recognizes a points annotation and …\nNote: used by tmc-server. Walks through each given path, …\nPrepares the exercise stub, copying tmc-junit-runner for …\nNote: Used by tmc-server. Prepares a submission for …\nUsed by tmc-server. Refreshes the course.\nRequest code review.\nResets the given exercise\nResets all settings in the config, removing those without …\nRuns tests for the exercise.\nRuns the tests for the exercise.\nRuns the tests for the exercise with the given timeout. …\nScans the exercise.\nProduces an exercise description of an exercise directory.\nSends feedback.\nSaves a setting in the config.\nSigns the given serializable value with the given secret …\nThe overall status of a test run.\nStudent folders or files which are copied from submission.\nSends the submission to the server.\nWhether each test passed and which points were awarded.\nDescriptions of the tests that will be run for this …\nCreate two-letter ISO 639-1 representation of the language.\nCreate string representation of this Language as a ISO …\nGet the English name of this language.\nUnsets the given setting.\nUpdates the exercises in the local projects directory.\nWrapper for fd_lock::FdLock. Used to lock …\nGuard that holds the locked file.\nCopies the file or directory at source into the target …\nNote: creates all intermediary directories if needed.\nCreates a file and wraps it in a lock. If a file already …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBlocks until the lock can be acquired.\nConvenience macro for locking a path.\nOpens and locks the given file. Note: Does not work on …\nReads all of the data from source and writes it into a new …\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitializes the warning reporter with the given closure to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls the warning closure with the given warning.")