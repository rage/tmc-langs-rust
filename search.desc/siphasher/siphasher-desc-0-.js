searchState.loadedDescShard("siphasher", 0, "An implementation of SipHash.\nAn implementation of SipHash with a 128-bit output.\nAn implementation of SipHash 2-4.\nAn implementation of SipHash 1-3.\nAn implementation of SipHash 2-4.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the keys used by this hasher\nGet the keys used by this hasher\nGet the keys used by this hasher\nCreates a new <code>SipHasher13</code> with the two initial keys set to …\nCreates a new <code>SipHasher24</code> with the two initial keys set to …\nCreates a new <code>SipHasher</code> with the two initial keys set to 0.\nCreates a <code>SipHasher13</code> that is keyed off the provided keys.\nCreates a <code>SipHasher24</code> that is keyed off the provided keys.\nCreates a <code>SipHasher</code> that is keyed off the provided keys.\nA 128-bit (2x64) hash output\nAn implementation of SipHash128 2-4.\nAn implementation of SipHash128 1-3.\nAn implementation of SipHash128 2-4.\nConvert into a 16-bytes vector\nReturn a 128-bit hash\nReturn a 128-bit hash\nReturn a 128-bit hash\nReturn a 128-bit hash\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the keys used by this hasher\nGet the keys used by this hasher\nGet the keys used by this hasher\nCreates a new <code>SipHasher13</code> with the two initial keys set to …\nCreates a new <code>SipHasher24</code> with the two initial keys set to …\nCreates a new <code>SipHasher</code> with the two initial keys set to 0.\nCreates a <code>SipHasher13</code> that is keyed off the provided keys.\nCreates a <code>SipHasher24</code> that is keyed off the provided keys.\nCreates a <code>SipHasher</code> that is keyed off the provided keys.")